{
  "name": "calendar",
  "dependencies": [
    "react-day-picker@^9.0"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "calendar.tsx",
      "content": "\"use client\"\n\nimport { ChevronDown, ChevronLeft, ChevronRight, ChevronUp } from \"lucide-react\"\nimport { DayPicker, type DayPickerProps } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\n\nexport type CalendarProps = DayPickerProps\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        month_caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        button_previous: buttonVariants({\n          variant: \"outline\",\n          className:\n            \"size-7 bg-transparent p-0 opacity-50 hover:opacity-100 absolute start-1\",\n        }),\n        button_next: buttonVariants({\n          variant: \"outline\",\n          className:\n            \"size-7 bg-transparent p-0 opacity-50 hover:opacity-100 absolute end-1\",\n        }),\n        month_grid: \"w-full border-collapse space-y-1\",\n        weekdays: \"flex\",\n        weekday:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        week: \"flex w-full mt-2\",\n        today: \"bg-accent text-accent-foreground\",\n        day: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day_button: buttonVariants({\n          variant: \"ghost\",\n          className: \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\",\n        }),\n        range_start: \"day-range-start\",\n\n        range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        range_end: \"day-range-end\",\n        selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        disabled: \"text-muted-foreground opacity-50\",\n        hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        Chevron({ orientation, disabled, className }) {\n          const Component =\n            orientation === \"left\"\n              ? ChevronLeft\n              : orientation === \"right\"\n              ? ChevronRight\n              : orientation === \"up\"\n              ? ChevronUp\n              : ChevronDown\n\n          return (\n            <Component\n              className={cn(\"size-4\", className)}\n              aria-disabled={disabled}\n            />\n          )\n        },\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"
    }
  ],
  "type": "components:ui"
}
