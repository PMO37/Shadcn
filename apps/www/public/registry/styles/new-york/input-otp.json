{
  "name": "input-otp",
  "dependencies": [
    "input-otp"
  ],
  "files": [
    {
      "name": "input-otp.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { DashIcon } from \"@radix-ui/react-icons\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP: React.FC<React.ComponentProps<typeof OTPInput>> = ({\n  className,\n  containerClassName,\n  ...props\n}) => (\n  <OTPInput\n    containerClassName={cn(\n      \"has-[:disabled]:opacity-50 flex items-center gap-2\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n)\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup: React.FC<React.ComponentProps<\"div\">> = ({\n  className,\n  ...props\n}) => <div className={cn(\"flex items-center\", className)} {...props} />\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot: React.FC<\n  React.ComponentProps<\"div\"> & { index: number }\n> = ({ index, className, ...props }) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      className={cn(\n        \"border-input relative flex h-9 w-9 items-center justify-center border-y border-r text-sm shadow-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"ring-ring z-10 ring-1\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"animate-caret-blink bg-foreground h-4 w-px duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n}\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator: React.FC<React.ComponentProps<\"div\">> = (props) => (\n  <div role=\"separator\" {...props}>\n    <DashIcon />\n  </div>\n)\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n"
    }
  ],
  "type": "components:ui"
}