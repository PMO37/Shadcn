{
  "name": "calendar",
  "dependencies": [
    "react-day-picker@^9.0"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "calendar.tsx",
      "content": "\"use client\"\n\nimport { ChevronDown, ChevronLeft, ChevronRight, ChevronUp } from \"lucide-react\"\nimport { DayPicker, type DayPickerProps } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button, buttonVariants } from \"@/registry/default/ui/button\"\n\nexport type CalendarProps = DayPickerProps\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"relative\",\n        month: \"space-y-4\",\n        nav: \"flex items-center justify-between absolute w-full z-10 px-1\",\n        button_previous: cn(\n          buttonVariants({\n            variant: \"outline\",\n            className:\n              \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n          })\n        ),\n        button_next: cn(\n          buttonVariants({\n            variant: \"outline\",\n            className:\n              \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n          })\n        ),\n        month_caption: \"flex justify-center items-center h-7\",\n        caption_label: \"text-sm font-medium\",\n        month_grid: \"border-collapse space-y-1\",\n        weekdays: \"flex\",\n        weekday: \"text-muted-foreground w-9 font-normal text-xs\",\n        weeks: \"\",\n        week: \"flex mt-2\",\n        day: \"p-0\",\n        range_middle: \"bg-accent last:rounded-e-md first:rounded-s-md\",\n        range_start: \"bg-accent rounded-s-md\",\n        range_end: \"bg-accent rounded-e-md\",\n        ...classNames,\n      }}\n      components={{\n        DayButton({ day, modifiers, className, ...buttonProps }) {\n          return (\n            <Button\n              variant={\"ghost\"}\n              className={cn(\n                className,\n                \"h-9 w-9 p-0 font-normal\",\n                modifiers?.today && \"bg-accent text-accent-foreground\",\n                modifiers?.selected &&\n                \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n                modifiers?.outside &&\n                \"text-muted-foreground opacity-50 pointer-events-none\",\n                modifiers.outside &&\n                modifiers.selected &&\n                \"bg-accent text-muted-foreground opacity-50\",\n                modifiers?.disabled && \"opacity-50 text-muted-foreground\",\n                modifiers?.hidden && \"invisible\",\n                modifiers.range_middle && \"bg-accent text-accent-foreground hover:bg-accent hover:text-accent-foreground rounded-none last:rounded-e-md first:rounded-s-md\",\n              )}\n              {...buttonProps}\n              aria-selected={modifiers.selected || buttonProps[\"aria-selected\"]}\n              aria-disabled={modifiers.disabled || buttonProps[\"aria-disabled\"]}\n              aria-hidden={modifiers.hidden || buttonProps[\"aria-hidden\"]}\n            />\n          )\n        },\n        Chevron({ orientation, disabled, className }) {\n          const Component =\n            orientation === \"left\"\n              ? ChevronLeft\n              : orientation === \"right\"\n                ? ChevronRight\n                : orientation === \"up\"\n                  ? ChevronUp\n                  : ChevronDown\n\n          return (\n            <Component\n              className={cn(\"w-4 h-4\", className)}\n              aria-disabled={disabled}\n            />\n          )\n        },\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"
    }
  ],
  "type": "components:ui"
}
